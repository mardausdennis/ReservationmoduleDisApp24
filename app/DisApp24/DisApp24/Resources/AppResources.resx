<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>


	<!-- ================================= -->
	<!-- ReservationPage.xaml Resources EN -->
	<!-- ================================= -->

	<!-- Page Title -->
	<data name="ReservationManagementTitle" xml:space="preserve">
    <value>Reservation Management</value>
</data>

	<!-- Reservieren Tab -->
	<data name="ReserveTabText" xml:space="preserve">
    <value>Reserve</value>
</data>
	<data name="ResourcePickerTitle" xml:space="preserve">
    <value>Select a Resource</value>
</data>
	<data name="FirstNamePlaceholder" xml:space="preserve">
    <value>First Name</value>
</data>
	<data name="LastNamePlaceholder" xml:space="preserve">
    <value>Last Name</value>
</data>
	<data name="EmailPlaceholder" xml:space="preserve">
    <value>Email Address</value>
</data>
	<data name="PhoneNumberPlaceholder" xml:space="preserve">
    <value>Phone Number (optional)</value>
</data>
	<data name="SelectDateLabel" xml:space="preserve">
    <value>Select a Date</value>
</data>
	<data name="SelectTimeTitle" xml:space="preserve">
    <value>Select a Time</value>
</data>
	<data name="CommentPlaceholder" xml:space="preserve">
    <value>Comment (optional)</value>
</data>
	<data name="ReserveButtonText" xml:space="preserve">
    <value>Reserve</value>
</data>

	<!-- My Appointments Tab -->
	<data name="MyAppointmentsHeader" xml:space="preserve">
    <value>My Appointments</value>
</data>

	<!-- ============================== -->
	<!-- ReservationViewModel Resources -->
	<!-- ============================== -->

	<data name="AccountInvalidErrorTitle" xml:space="preserve">
    <value>Error</value>
</data>
	<data name="AccountInvalidErrorMessage" xml:space="preserve">
    <value>Your user account is no longer valid. Please log in again.</value>
</data>
	<data name="ReservationSuccessTitle" xml:space="preserve">
    <value>Success</value>
</data>
	<data name="ReservationSuccessMessage" xml:space="preserve">
    <value>Your reservation request has been successfully sent. You will receive a confirmation by email once your reservation has been confirmed.</value>
</data>
	<data name="ReservationFailedTitle" xml:space="preserve">
    <value>Error</value>
</data>
	<data name="ReservationFailedMessage" xml:space="preserve">
    <value>There was an error sending your reservation request. Please try again later.</value>
</data>

	<!-- Error messages for input validation -->
	<data name="SelectResourceError" xml:space="preserve">
    <value>Please select a resource.</value>
</data>
	<data name="EnterFirstNameError" xml:space="preserve">
    <value>Please enter your first name.</value>
</data>
	<data name="EnterLastNameError" xml:space="preserve">
    <value>Please enter your last name.</value>
</data>
	<data name="EnterValidEmailError" xml:space="preserve">
    <value>Please enter a valid email address.</value>
</data>
	<data name="EnterValidPhoneError" xml:space="preserve">
    <value>Please enter a valid phone number.</value>
</data>
	<data name="SelectDateError" xml:space="preserve">
    <value>Please select a date.</value>
</data>
	<data name="SelectTimeError" xml:space="preserve">
    <value>Please select a time.</value>
</data>

	<!-- ============================== -->
	<!-- CalendarPage.xaml Resources EN -->
	<!-- ============================== -->

<data name="CalendarPage_SelectedDateText" xml:space="preserve">
    <value>Selected Date</value>
  </data>
  
  <data name="CalendarPage_ConfirmButtonText" xml:space="preserve">
    <value>Confirm Date</value>
  </data>


	<!-- =========================== -->
	<!-- CalendarViewModel Resources -->
	<!-- =========================== -->

	<data name="NoDateSelected" xml:space="preserve">
    <value>No date selected</value>
</data>
	<data name="ErrorTitle" xml:space="preserve">
    <value>Error</value>
</data>
	<data name="SelectDateBeforeConfirming" xml:space="preserve">
    <value>Please select a date before confirming.</value>
</data>
	<data name="OkButton" xml:space="preserve">
    <value>OK</value>
</data>

	<!-- =========================== -->
	<!-- LoginPage.xaml Resources EN -->
	<!-- =========================== -->

	<data name="LoginPage_PleaseSignIn" xml:space="preserve">
    <value>Please sign in</value>
</data>

	<data name="LoginPage_EmailPlaceholder" xml:space="preserve">
    <value>Email Address</value>
</data>

	<data name="LoginPage_PasswordPlaceholder" xml:space="preserve">
    <value>Password</value>
</data>

	<data name="LoginPage_LoginButtonText" xml:space="preserve">
    <value>Login</value>
</data>

	<data name="LoginPage_LoginWithGoogle" xml:space="preserve">
    <value>Login with Google</value>
</data>

	<data name="LoginPage_NoAccount" xml:space="preserve">
    <value>No account?</value>
</data>

	<data name="LoginPage_RegisterHere" xml:space="preserve">
    <value> Register here</value>
</data>

	<data name="LoginPage_GuestContinue" xml:space="preserve">
    <value>Continue as Guest</value>
</data>

	<!-- ================================== -->
	<!-- RegistrationPage.xaml Resources EN -->
	<!-- ================================== -->

	<data name="RegistrationPage_Title" xml:space="preserve">
    <value>Registration</value>
</data>
	<data name="RegistrationPage_FirstNamePlaceholder" xml:space="preserve">
    <value>First Name</value>
</data>
	<data name="RegistrationPage_LastNamePlaceholder" xml:space="preserve">
    <value>Last Name</value>
</data>
	<data name="RegistrationPage_PhoneNumberPlaceholder" xml:space="preserve">
    <value>Phone Number (optional)</value>
</data>
	<data name="RegistrationPage_EmailPlaceholder" xml:space="preserve">
    <value>Email Address</value>
</data>
	<data name="RegistrationPage_PasswordPlaceholder" xml:space="preserve">
    <value>Password</value>
</data>
	<data name="RegistrationPage_ConfirmPasswordPlaceholder" xml:space="preserve">
    <value>Confirm Password</value>
</data>
	<data name="RegistrationPage_RegisterButtonText" xml:space="preserve">
    <value>Register</value>
</data>
	<data name="RegistrationPage_AlreadyRegisteredText" xml:space="preserve">
    <value>Already registered?</value>
</data>
	<data name="RegistrationPage_GoToLoginText" xml:space="preserve">
    <value>Go to Login</value>
</data>

	<!-- ============================== -->
	<!-- RegistraionViewModel Resources -->
	<!-- ============================== -->

	<data name="PasswordsDoNotMatch" xml:space="preserve">
    <value>The entered passwords do not match.</value>
</data>

	<data name="RegistrationSuccessMessage" xml:space="preserve">
    <value>Your account has been successfully created, and you have been automatically signed in.</value>
</data>

	<data name="SuccessTitle" xml:space="preserve">
    <value>Success</value>
</data>

	<data name="EnterFirstName" xml:space="preserve">
    <value>Please enter your first name.</value>
</data>

	<data name="EnterLastName" xml:space="preserve">
    <value>Please enter your last name.</value>
</data>

	<data name="EnterValidEmail" xml:space="preserve">
    <value>Please enter a valid email address.</value>
</data>

	<data name="EnterValidPhoneNumber" xml:space="preserve">
    <value>Please enter a valid phone number.</value>
</data>

	<data name="EnterPassword" xml:space="preserve">
    <value>Please enter a password.</value>
</data>

	<!-- ==================== -->
	<!-- SigninButton.xaml.cs -->
	<!-- ==================== -->

	<data name="SignInButtonText_SignedIn" xml:space="preserve">
    <value>Sign Out</value>
  </data>

	<data name="SignInButtonText_SignedOut" xml:space="preserve">
    <value>Sign In</value>
  </data>
	

</root>